<template>
  <!-- Only one root node is allowed in template. -->
  <div class="container">
    <div class="push_control">
      <text class="header-style">Push Notification:</text>
      <switch onchange="checkStatus" id="notification_activator"></switch>
    </div>
    <div class="data_message_shower">
      <text class="header-style">Received Data Messages:</text>
      <text>{{data_messages}}</text>
    </div>
    <div class="push_info">
      <text class="push_token">{{message}}</text>
      <input type="button" class="btn" value="Get Token" onclick="getToken" />
    </div>
  </div>
</template>

<style>
  .push_info {
    margin-top: 30px;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .push_control {
    position: fixed;
  }
  .header-style {
    font-weight: bold;
  }
  .container {
    flex-direction: column;
    justify-content: center;
  }

  .push_token {
    font-size: 30px;
    margin: 30px;
  }
  .btn {
    width: 100%;
  }
  .data_message_shower {
    flex-direction: column;
    margin-bottom: 30px;
  }
</style>

<script>
  // Before use push kit, it must be import in the script part.
  import push from '@service.push';
  // Add for can be use show toastr message function 
  import prompt from '@system.prompt';

  module.exports = {
    data: {
      componentData: {},
      message: 'Click to button to get token',
      token: "",
      data_messages: "Not Received Yet!\n"
    },
    onInit() {
      this.$page.setTitleBar({
        text: 'Quick App with Push Kit',
        textColor: '#ffffff',
        backgroundColor: '#007DFF',
        backgroundOpacity: 0.5,
        menu: true
      });
    },
    sendToServer: function () {
      // This is just function name definition.
      // You should update function body based on your project communication with your Server.
      // sample: Send regId using with Rest API
      var anchor = this;
      console.log("This Token should be store your storage: " + anchor.token.regId);
    },
    getToken() {
      var that = this;
      if (that.token === '') {
        prompt.showToast({
          message: "Please activate push notification!"
        })
      }
      else {
        that.message = that.token.regId;
      }
    },
    activatePush() {
      var anchor = this;
      // The payload of a data message can be received in the callback.
      // https://developer.huawei.com/consumer/en/doc/development/quickApp-References/quickapp-api-push#on  
      push.on({
        callback: function (ret) {
          if (anchor.data_messages === "Not Received Yet!\n") {
            anchor.data_messages = JSON.stringify(ret);
          } else {
            anchor.data_messages += JSON.stringify(ret);
          }

          console.log("received pass through message, ret=" + JSON.stringify(ret));

        },
        complete: function () {
          console.log('push.on completed');
        }
      });
      // Checking Provider Type
      // https://developer.huawei.com/consumer/en/doc/development/quickApp-References/quickapp-api-push
      var pushProvider = push.getProvider();
      var anchor = this;

      if (pushProvider === "huawei") {
        // Subscribes to push messages. Generally, this API can be called during app initialization.
        // for example, it can be called in the onCreate method of an app.
        push.subscribe({
          success: function (data) {
            console.log('push.subscribe succeeded, result data = ' + JSON.stringify(data));
            anchor.token = data;
            // Send data to server for store user regIds.
            anchor.sendToServer();
          },
          fail: function (data, code) {
            console.log('push.subscribe failed, result data = ' + JSON.stringify(data) + ', code = ' + code);
          },
          complete: function () {
            console.log('push.subscribe completed');
          }
        })
      }
    },

    checkStatus: function (data) {
      var anchor = this;
      if (data.checked === true) {
        anchor.activatePush();
        prompt.showToast({
          message: "Push Notifications Activated!"
        })
      } else {
        // Removes push event callback. 
        // The callback in the push.on API will not receive the data message.
        // https://developer.huawei.com/consumer/en/doc/development/quickApp-References/quickapp-api-push#off
        push.off();
        anchor.token = '';
        anchor.message = 'Push Notification deactivated.';
        prompt.showToast({
          message: "Push Notifications Deactivated!"
        })
      }
    }
  }
</script>